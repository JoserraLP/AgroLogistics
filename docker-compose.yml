version: '3.3'

services:
  agrologistics_db:
    container_name: agrologistics_db
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'agrologistics'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'root'
      MYSQL_ROOT_PASSWORD: 'root'
      MYSQL_ROOT_HOST: '%'  # needs to be enclosed with quotes
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - 3310:3306
    volumes:
      # Load initialization scripts by order
      - "./mysql/model.sql:/docker-entrypoint-initdb.d/1.sql"
      - "./mysql/data.sql:/docker-entrypoint-initdb.d/2.sql"
      - "./mysql/user.sql:/docker-entrypoint-initdb.d/3.sql"
      - "./mysql/my.cnf:/etc/mysql/my.cnf"
    networks:
      net:
        ipv4_address: 172.30.0.2  
  agrologistics_api:
    container_name: agrologistics_api
    build: ./api/
    restart: on-failure
    ports:
      - 8080:8080
    depends_on:
      - agrologistics_db
    command: sh -c "node index.js > /dev/null 2>&1"
    networks:
      net:
        ipv4_address: 172.30.0.3  
  agrologistics_web:
    container_name: agrologistics_web
    build: ./webserver/
    restart: always
    ports:
      - 5000:5000
    depends_on:
      - agrologistics_api
    volumes:
      - ./webserver:/app
    environment:
      - FLASK_APP=/app/agrologistics_web
      - WAIT_HOSTS=agrologistics_api:8080
      - WAIT_HOSTS_TIMEOUT=150
      - WAIT_SLEEP_INTERVAL=30
      - WAIT_HOST_CONNECT_TIMEOUT=30
    command: bash -c "/wait && cd /app/agrologistics_web && flask run --host=0.0.0.0"
    networks:
      net:
        ipv4_address: 172.30.0.4  
networks:
  net:
    driver: bridge
    ipam:
        driver: default
        config:
            - subnet: 172.30.0.0/16
